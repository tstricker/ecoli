{
    "collab_server" : "",
    "contents" : "---\ntitle: \"ecoli\"\noutput: html_document\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n## R Markdown\n\necoli -- RNAseq files were aligned to genome () with bowtie. Count tables were generated using htseq with transcriptome file ()\n\n```{r }\nlibrary(\"DESeq2\")\nlibrary(\"ggplot2\")\nlibrary(\"qvalue\")\nlibrary(\"pheatmap\")\nlibrary(\"RColorBrewer\")\nlibrary(\"sva\")\nlibrary(\"PoiClaClu\")\n\n\ndirectory <- \"~/ecoli/data/ecoli_count/\"\nsampleFiles <- grep(\"count\",list.files(directory),value=TRUE)\n\nsampleCondition <-read.delim(file =\"data/sample.sheet.txt\", header =T, as.is =T, quote =\"\")\nsampleTable <- data.frame(sampleName = sampleFiles,fileName = sampleFiles,condition = sampleCondition)\nddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable, directory = directory,design=~condition.Strain+condition.Time_point+condition.Strain:condition.Time_point )\nddsHTSeq\ndds <- ddsHTSeq[ rowSums(counts(ddsHTSeq)) > 1, ]\ndds <- DESeq(dds)\n\ndds <- ddsHTSeq[ rowSums(counts(ddsHTSeq)) > 1, ]\ndds <- DESeq(dds)\nddsTC <- DESeq(dds, test=\"LRT\", reduced = ~ condition.Strain+condition.Time_point)\nresTC <- results(ddsTC)\nresTC$symbol <- mcols(ddsTC)$symbol\nhead(resTC[order(resTC$pvalue),])\nsum(resTC$padj < 0.1, na.rm=TRUE)\n\ndata <- plotCounts(ddsTC, \"ABE07339-1\",\n                   intgroup=c(\"condition.Time_point\",\"condition.Strain\"), returnData=TRUE)\nggplot(data, aes(x=condition.Time_point, y=count, color=condition.Strain, group=condition.Strain)) + \n  geom_point() + stat_smooth(se=FALSE,method=\"loess\") +  scale_y_log10()\n\n```\n\nplots -- plots for all data \n\n```{r }\nrld <- rlog(dds, blind=FALSE)\n\nsampleDists <- dist( t( assay(rld) ) )\nsampleDists\nsampleDistMatrix <- as.matrix( sampleDists )\nrownames(sampleDistMatrix) <-paste(sampleCondition[,1],sampleCondition[,2],sampleCondition[,4], sep =\".\") \ncolnames(sampleDistMatrix) <- NULL\ncolors <- colorRampPalette( rev(brewer.pal(9, \"Blues\")) )(255)\npheatmap(sampleDistMatrix,\n         clustering_distance_rows=sampleDists,\n         clustering_distance_cols=sampleDists,\n         col=colors)\n\npoisd <- PoissonDistance(t(counts(dds)))\n\nsamplePoisDistMatrix <- as.matrix( poisd$dd )\nrownames(samplePoisDistMatrix) <- paste(sampleCondition[,1],sampleCondition[,2],sampleCondition[,4], sep =\".\") \ncolnames(samplePoisDistMatrix) <- NULL\npheatmap(samplePoisDistMatrix,\n         clustering_distance_rows=poisd$dd,\n         clustering_distance_cols=poisd$dd,\n         col=colors)\n\nplotPCA(rld, intgroup = c(\"condition.Strain\", \"condition.Time_point\"))\n\npcaData <- plotPCA(rld, intgroup = c( \"condition.Strain\", \"condition.Time_point\"), returnData=TRUE)\npercentVar <- round(100 * attr(pcaData, \"percentVar\"))\n\nggplot(pcaData, aes(PC1, PC2, color=condition.Strain, shape=condition.Time_point)) + geom_point(size=3) +\n  xlab(paste0(\"PC1: \",percentVar[1],\"% variance\")) +\n  ylab(paste0(\"PC2: \",percentVar[2],\"% variance\")) +\n  coord_fixed()\n\nmdsData <- data.frame(cmdscale(sampleDistMatrix))\nmds <- cbind(mdsData, as.data.frame(colData(rld)))\nggplot(mds, aes(X1,X2,color=condition.Strain,shape=condition.Time_point)) + geom_point(size=3) +\n  coord_fixed()\n\nmdsPoisData <- data.frame(cmdscale(samplePoisDistMatrix))\nmdsPois <- cbind(mdsPoisData, as.data.frame(colData(dds)))\nggplot(mdsPois, aes(X1,X2,color=condition.Strain,shape=condition.Time_point)) + geom_point(size=3) +\n  coord_fixed()\n\nqs <- c(0, quantile(res$baseMean[res$baseMean > 0], 0:6/6))\nbins <- cut(res$baseMean, qs)\nlevels(bins) <- paste0(\"~\",round(signif(.5*qs[-1] + .5*qs[-length(qs)],2)))\nratios <- tapply(res$pvalue, bins, function(p) mean(p < .05, na.rm=TRUE))\nbarplot(ratios, xlab=\"mean normalized count\", ylab=\"ratio of small p values\")\n\n```\nmod <- model.matrix(~ dex, colData(dds))\nmod0 <- model.matrix(~ 1, colData(dds))\nThen do unsupervised svaseq \n\nsvseq <- svaseq(dat, mod, mod0, n.sv=2)\nNow use this as input to DESeq design, along with genotype\n\ndds$SV1 <- svseq$sv[,1]\ndds$SV2 <- svseq$sv[,2]\ndesign(dds) <- ~ genotype + SV1 + SV2 \n\n\n```{r }\ndirectory <- \"~/ecoli/data/dpmra/\"\nsampleFiles <- grep(\"count\",list.files(directory),value=TRUE)\n\nsampleCondition <-read.delim(file =\"data/sample.sheet.short.txt\", header =T, as.is =T, quote =\"\")\nsampleTable <- data.frame(sampleName = sampleFiles,fileName = sampleFiles,condition = sampleCondition)\nddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable, directory = directory,design=~condition.Strain+condition.Time_point+ condition.Strain:condition.Time_point)\nddsHTSeq$condition.Strain <- relevel(ddsHTSeq$condition.Strain, \"WT\")\nddsHTSeq\n\n\ndds <- ddsHTSeq[ rowSums(counts(ddsHTSeq)) > 1, ]\ndds <- DESeq(dds)\nddsTC <- DESeq(dds, test=\"LRT\", reduced = ~ condition.Strain+condition.Time_point)\nresTC <- results(ddsTC)\nresTC$symbol <- mcols(ddsTC)$symbol\nhead(resTC[order(resTC$pvalue),])\nresTCo =resTC[order(resTC$pvalue),]\ntable =  unlist(resTCo@listData)\ntable = matrix(table, ncol = 6 )\nrownames(table) = unlist(resTCo@rownames)\nnames = c(\"baseMean\", \"log2FoldChange\", \"lfcSE\", \"stat\", \"pvalue\", \"padj\")\ncolnames(table)=names\nwrite.table(table, file = \"dmpra.tc.table.txt\", quote = FALSE, row.names = TRUE, col.names = TRUE, sep = \"\")\nsave(resTCo, file = \"dmpra.tc.resTC.rda\")\n\ndata <- plotCounts(ddsTC, \"ABE07617-1\",\n                   intgroup=c(\"condition.Time_point\",\"condition.Strain\"), returnData=TRUE)\nggplot(data, aes(x=condition.Time_point, y=count, color=condition.Strain, group=condition.Strain)) + \n  geom_point() + stat_smooth(se=FALSE,method=\"loess\") +  scale_y_log10()\n\nrld <- rlog(dds, blind=FALSE)\nsampleDists <- dist( t( assay(rld) ) )\nsampleDists\nsampleDistMatrix <- as.matrix( sampleDists )\nrownames(sampleDistMatrix) <-paste(sampleCondition[,1],sampleCondition[,2],sampleCondition[,4], sep =\".\") \ncolnames(sampleDistMatrix) <- NULL\ncolors <- colorRampPalette( rev(brewer.pal(9, \"Blues\")) )(255)\npheatmap(sampleDistMatrix,\n         clustering_distance_rows=sampleDists,\n         clustering_distance_cols=sampleDists,\n         col=colors)\n\npoisd <- PoissonDistance(t(counts(dds)))\n\nsamplePoisDistMatrix <- as.matrix( poisd$dd )\nrownames(samplePoisDistMatrix) <- paste(sampleCondition[,1],sampleCondition[,2],sampleCondition[,4], sep =\".\") \ncolnames(samplePoisDistMatrix) <- NULL\npheatmap(samplePoisDistMatrix,\n         clustering_distance_rows=poisd$dd,\n         clustering_distance_cols=poisd$dd,\n         col=colors)\n\nplotPCA(rld, intgroup = c(\"condition.Strain\", \"condition.Time_point\"))\n\npcaData <- plotPCA(rld, intgroup = c( \"condition.Strain\", \"condition.Time_point\"), returnData=TRUE)\npercentVar <- round(100 * attr(pcaData, \"percentVar\"))\n\nggplot(pcaData, aes(PC1, PC2, color=condition.Strain, shape=condition.Time_point)) + geom_point(size=3) +\n  xlab(paste0(\"PC1: \",percentVar[1],\"% variance\")) +\n  ylab(paste0(\"PC2: \",percentVar[2],\"% variance\")) +\n  coord_fixed()\n\nmdsData <- data.frame(cmdscale(sampleDistMatrix))\nmds <- cbind(mdsData, as.data.frame(colData(rld)))\nggplot(mds, aes(X1,X2,color=condition.Strain,shape=condition.Time_point)) + geom_point(size=3) +\n  coord_fixed()\n\nmdsPoisData <- data.frame(cmdscale(samplePoisDistMatrix))\nmdsPois <- cbind(mdsPoisData, as.data.frame(colData(dds)))\nggplot(mdsPois, aes(X1,X2,color=condition.Strain,shape=condition.Time_point)) + geom_point(size=3) +\n  coord_fixed()\n\n```\n\ndpmrb testing\n\n```{r }\ndirectory <- \"~/ecoli/data/dpmrb/\"\nsampleFiles <- grep(\"count\",list.files(directory),value=TRUE)\n\nsampleCondition <-read.delim(file =\"data/dpmrb.sample.txt\", header =T, as.is =T, quote =\"\")\nsampleTable <- data.frame(sampleName = sampleFiles,fileName = sampleFiles,condition = sampleCondition)\nddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable, directory = directory,design=~condition.Strain+condition.Time_point+ condition.Strain:condition.Time_point)\nddsHTSeq\n\n\ndds <- ddsHTSeq[ rowSums(counts(ddsHTSeq)) > 1, ]\ndds <- DESeq(dds)\nddsTC <- DESeq(dds, test=\"LRT\", reduced = ~ condition.Strain+condition.Time_point)\nresTC <- results(ddsTC)\nresTC$symbol <- mcols(ddsTC)$symbol\nhead(resTC[order(resTC$pvalue),])\n\nresTCo =resTC[order(resTC$pvalue),]\ntable =  unlist(resTCo@listData)\ntable = matrix(table, ncol = 6 )\nrownames(table) = unlist(resTCo@rownames)\nnames = c(\"baseMean\", \"log2FoldChange\", \"lfcSE\", \"stat\", \"pvalue\", \"padj\")\ncolnames(table)=names\nsum(resTC$padj < 0.1, na.rm=TRUE)\nwrite.table(table, file = \"dpmrb.tc.table.txt\", quote = FALSE, row.names = TRUE, col.names = TRUE, sep = \"\")\nsave(resTCo, file = \"dpmrb.tc.resTC.rda\")\n\ndata <- plotCounts(ddsTC, \"ABE07339-1\",\n                   intgroup=c(\"condition.Time_point\",\"condition.Strain\"), returnData=TRUE)\nggplot(data, aes(x=condition.Time_point, y=count, color=condition.Strain, group=condition.Strain)) + \n  geom_point() + stat_smooth(se=FALSE,method=\"loess\") +  scale_y_log10()\n\nrld <- rlog(dds, blind=FALSE)\nsampleDists <- dist( t( assay(rld) ) )\nsampleDists\nsampleDistMatrix <- as.matrix( sampleDists )\nrownames(sampleDistMatrix) <-paste(sampleCondition[,1],sampleCondition[,2],sampleCondition[,4], sep =\".\") \ncolnames(sampleDistMatrix) <- NULL\ncolors <- colorRampPalette( rev(brewer.pal(9, \"Blues\")) )(255)\npheatmap(sampleDistMatrix,\n         clustering_distance_rows=sampleDists,\n         clustering_distance_cols=sampleDists,\n         col=colors)\n\npoisd <- PoissonDistance(t(counts(dds)))\n\nsamplePoisDistMatrix <- as.matrix( poisd$dd )\nrownames(samplePoisDistMatrix) <- paste(sampleCondition[,1],sampleCondition[,2],sampleCondition[,4], sep =\".\") \ncolnames(samplePoisDistMatrix) <- NULL\npheatmap(samplePoisDistMatrix,\n         clustering_distance_rows=poisd$dd,\n         clustering_distance_cols=poisd$dd,\n         col=colors)\n\nplotPCA(rld, intgroup = c(\"condition.Strain\", \"condition.Time_point\"))\n\npcaData <- plotPCA(rld, intgroup = c( \"condition.Strain\", \"condition.Time_point\"), returnData=TRUE)\npercentVar <- round(100 * attr(pcaData, \"percentVar\"))\n\nggplot(pcaData, aes(PC1, PC2, color=condition.Strain, shape=condition.Time_point)) + geom_point(size=3) +\n  xlab(paste0(\"PC1: \",percentVar[1],\"% variance\")) +\n  ylab(paste0(\"PC2: \",percentVar[2],\"% variance\")) +\n  coord_fixed()\n\nmdsData <- data.frame(cmdscale(sampleDistMatrix))\nmds <- cbind(mdsData, as.data.frame(colData(rld)))\nggplot(mds, aes(X1,X2,color=condition.Strain,shape=condition.Time_point)) + geom_point(size=3) +\n  coord_fixed()\n\nmdsPoisData <- data.frame(cmdscale(samplePoisDistMatrix))\nmdsPois <- cbind(mdsPoisData, as.data.frame(colData(dds)))\nggplot(mdsPois, aes(X1,X2,color=condition.Strain,shape=condition.Time_point)) + geom_point(size=3) +\n  coord_fixed()\n\n```\n\n\n\n\n```{r }\n\ndirectory <- \"~/ecoli/data/dqsec//\"\nsampleFiles <- grep(\"count\",list.files(directory),value=TRUE)\n\nsampleCondition <-read.delim(file =\"data/dqsec.sample.txt\", header =T, as.is =T, quote =\"\")\nsampleTable <- data.frame(sampleName = sampleFiles,fileName = sampleFiles,condition = sampleCondition)\nddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable, directory = directory,design=~condition.Strain+condition.Time_point+ condition.Strain:condition.Time_point)\nddsHTSeq\n\n\ndds <- ddsHTSeq[ rowSums(counts(ddsHTSeq)) > 1, ]\ndds <- DESeq(dds)\nddsTC <- DESeq(dds, test=\"LRT\", reduced = ~ condition.Strain+condition.Time_point)\nresTC <- results(ddsTC)\nresTC$symbol <- mcols(ddsTC)$symbol\nhead(resTC[order(resTC$pvalue),])\n\nresTCo =resTC[order(resTC$pvalue),]\ntable =  unlist(resTCo@listData)\ntable = matrix(table, ncol = 6 )\nrownames(table) = unlist(resTCo@rownames)\nnames = c(\"baseMean\", \"log2FoldChange\", \"lfcSE\", \"stat\", \"pvalue\", \"padj\")\ncolnames(table)=names\nsum(resTC$padj < 0.1, na.rm=TRUE)\n\nwrite.table(table, file = \"dqsec.tc.table.txt\", quote = FALSE, row.names = TRUE, col.names = TRUE, sep = \"\")\nsave(resTCo, file = \"dqsec.tc.resTC.rda\")\n\ndata <- plotCounts(ddsTC, \"ABE08217-1\",\n                   intgroup=c(\"condition.Time_point\",\"condition.Strain\"), returnData=TRUE)\nggplot(data, aes(x=condition.Time_point, y=count, color=condition.Strain, group=condition.Strain)) + \n  geom_point() + stat_smooth(se=FALSE,method=\"loess\") +  scale_y_log10()\n\nrld <- rlog(dds, blind=FALSE)\nsampleDists <- dist( t( assay(rld) ) )\nsampleDists\nsampleDistMatrix <- as.matrix( sampleDists )\nrownames(sampleDistMatrix) <-paste(sampleCondition[,1],sampleCondition[,2],sampleCondition[,4], sep =\".\") \ncolnames(sampleDistMatrix) <- NULL\ncolors <- colorRampPalette( rev(brewer.pal(9, \"Blues\")) )(255)\npheatmap(sampleDistMatrix,\n         clustering_distance_rows=sampleDists,\n         clustering_distance_cols=sampleDists,\n         col=colors)\n\npoisd <- PoissonDistance(t(counts(dds)))\n\nsamplePoisDistMatrix <- as.matrix( poisd$dd )\nrownames(samplePoisDistMatrix) <- paste(sampleCondition[,1],sampleCondition[,2],sampleCondition[,4], sep =\".\") \ncolnames(samplePoisDistMatrix) <- NULL\npheatmap(samplePoisDistMatrix,\n         clustering_distance_rows=poisd$dd,\n         clustering_distance_cols=poisd$dd,\n         col=colors)\n\nplotPCA(rld, intgroup = c(\"condition.Strain\", \"condition.Time_point\"))\n\npcaData <- plotPCA(rld, intgroup = c( \"condition.Strain\", \"condition.Time_point\"), returnData=TRUE)\npercentVar <- round(100 * attr(pcaData, \"percentVar\"))\n\nggplot(pcaData, aes(PC1, PC2, color=condition.Strain, shape=condition.Time_point)) + geom_point(size=3) +\n  xlab(paste0(\"PC1: \",percentVar[1],\"% variance\")) +\n  ylab(paste0(\"PC2: \",percentVar[2],\"% variance\")) +\n  coord_fixed()\n\nmdsData <- data.frame(cmdscale(sampleDistMatrix))\nmds <- cbind(mdsData, as.data.frame(colData(rld)))\nggplot(mds, aes(X1,X2,color=condition.Strain,shape=condition.Time_point)) + geom_point(size=3) +\n  coord_fixed()\n\nmdsPoisData <- data.frame(cmdscale(samplePoisDistMatrix))\nmdsPois <- cbind(mdsPoisData, as.data.frame(colData(dds)))\nggplot(mdsPois, aes(X1,X2,color=condition.Strain,shape=condition.Time_point)) + geom_point(size=3) +\n  coord_fixed()\n\n```\n\n\n```{r }\n\ndirectory <- \"~/ecoli/data/dqseb/\"\nsampleFiles <- grep(\"count\",list.files(directory),value=TRUE)\n\nsampleCondition <-read.delim(file =\"data/dqseb.sample.txt\", header =T, as.is =T, quote =\"\")\nsampleTable <- data.frame(sampleName = sampleFiles,fileName = sampleFiles,condition = sampleCondition)\nddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable, directory = directory,design=~condition.Strain+condition.Time_point+ condition.Strain:condition.Time_point)\nddsHTSeq\n\n\ndds <- ddsHTSeq[ rowSums(counts(ddsHTSeq)) > 1, ]\ndds <- DESeq(dds)\nddsTC <- DESeq(dds, test=\"LRT\", reduced = ~ condition.Strain+condition.Time_point)\nresTC <- results(ddsTC)\nresTC$symbol <- mcols(ddsTC)$symbol\nhead(resTC[order(resTC$pvalue),])\n\nresTCo =resTC[order(resTC$pvalue),]\ntable =  unlist(resTCo@listData)\ntable = matrix(table, ncol = 6 )\nrownames(table) = unlist(resTCo@rownames)\nnames = c(\"baseMean\", \"log2FoldChange\", \"lfcSE\", \"stat\", \"pvalue\", \"padj\")\ncolnames(table)=names\nsum(resTC$padj < 0.1, na.rm=TRUE)\n\nwrite.table(table, file = \"dqseb.tc.table.txt\", quote = FALSE, row.names = TRUE, col.names = TRUE, sep = \"\")\nsave(resTCo, file = \"dqseb.tc.resTC.rda\")\n\ndata <- plotCounts(ddsTC, \"ABE09213-1\",\n                   intgroup=c(\"condition.Time_point\",\"condition.Strain\"), returnData=TRUE)\nggplot(data, aes(x=condition.Time_point, y=count, color=condition.Strain, group=condition.Strain)) + \n  geom_point() + stat_smooth(se=FALSE,method=\"loess\") +  scale_y_log10()\n\nrld <- rlog(dds, blind=FALSE)\nsampleDists <- dist( t( assay(rld) ) )\nsampleDists\nsampleDistMatrix <- as.matrix( sampleDists )\nrownames(sampleDistMatrix) <-paste(sampleCondition[,1],sampleCondition[,2],sampleCondition[,4], sep =\".\") \ncolnames(sampleDistMatrix) <- NULL\ncolors <- colorRampPalette( rev(brewer.pal(9, \"Blues\")) )(255)\npheatmap(sampleDistMatrix,\n         clustering_distance_rows=sampleDists,\n         clustering_distance_cols=sampleDists,\n         col=colors)\n\npoisd <- PoissonDistance(t(counts(dds)))\n\nsamplePoisDistMatrix <- as.matrix( poisd$dd )\nrownames(samplePoisDistMatrix) <- paste(sampleCondition[,1],sampleCondition[,2],sampleCondition[,4], sep =\".\") \ncolnames(samplePoisDistMatrix) <- NULL\npheatmap(samplePoisDistMatrix,\n         clustering_distance_rows=poisd$dd,\n         clustering_distance_cols=poisd$dd,\n         col=colors)\n\nplotPCA(rld, intgroup = c(\"condition.Strain\", \"condition.Time_point\"))\n\npcaData <- plotPCA(rld, intgroup = c( \"condition.Strain\", \"condition.Time_point\"), returnData=TRUE)\npercentVar <- round(100 * attr(pcaData, \"percentVar\"))\n\nggplot(pcaData, aes(PC1, PC2, color=condition.Strain, shape=condition.Time_point)) + geom_point(size=3) +\n  xlab(paste0(\"PC1: \",percentVar[1],\"% variance\")) +\n  ylab(paste0(\"PC2: \",percentVar[2],\"% variance\")) +\n  coord_fixed()\n\nmdsData <- data.frame(cmdscale(sampleDistMatrix))\nmds <- cbind(mdsData, as.data.frame(colData(rld)))\nggplot(mds, aes(X1,X2,color=condition.Strain,shape=condition.Time_point)) + geom_point(size=3) +\n  coord_fixed()\n\nmdsPoisData <- data.frame(cmdscale(samplePoisDistMatrix))\nmdsPois <- cbind(mdsPoisData, as.data.frame(colData(dds)))\nggplot(mdsPois, aes(X1,X2,color=condition.Strain,shape=condition.Time_point)) + geom_point(size=3) +\n  coord_fixed()\n\n```\n\n\n```{r }\n\ndirectory <- \"~/ecoli/data/dqseBdpmrA/\"\nsampleFiles <- grep(\"count\",list.files(directory),value=TRUE)\n\nsampleCondition <-read.delim(file =\"data/dqseBdpmrA/.sample.txt\", header =T, as.is =T, quote =\"\")\nsampleTable <- data.frame(sampleName = sampleFiles,fileName = sampleFiles,condition = sampleCondition)\nddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable, directory = directory,design=~condition.Strain+condition.Time_point+ condition.Strain:condition.Time_point)\nddsHTSeq\n\n\ndds <- ddsHTSeq[ rowSums(counts(ddsHTSeq)) > 1, ]\ndds <- DESeq(dds)\nddsTC <- DESeq(dds, test=\"LRT\", reduced = ~ condition.Strain+condition.Time_point)\nresTC <- results(ddsTC)\nresTC$symbol <- mcols(ddsTC)$symbol\nhead(resTC[order(resTC$pvalue),])\n\nresTCo =resTC[order(resTC$pvalue),]\ntable =  unlist(resTCo@listData)\ntable = matrix(table, ncol = 6 )\nrownames(table) = unlist(resTCo@rownames)\nnames = c(\"baseMean\", \"log2FoldChange\", \"lfcSE\", \"stat\", \"pvalue\", \"padj\")\ncolnames(table)=names\nsum(resTC$padj < 0.1, na.rm=TRUE)\n\nwrite.table(table, file = \"dqseBdpmrA.tc.table.txt\", quote = FALSE, row.names = TRUE, col.names = TRUE, sep = \"\")\nsave(resTCo, file = \"dqseBdpmrA.tc.resTC.rda\")\n\ndata <- plotCounts(ddsTC, \"ABE08217-1\",\n                   intgroup=c(\"condition.Time_point\",\"condition.Strain\"), returnData=TRUE)\nggplot(data, aes(x=condition.Time_point, y=count, color=condition.Strain, group=condition.Strain)) + \n  geom_point() + stat_smooth(se=FALSE,method=\"loess\") +  scale_y_log10()\n\nrld <- rlog(dds, blind=FALSE)\nsampleDists <- dist( t( assay(rld) ) )\nsampleDists\nsampleDistMatrix <- as.matrix( sampleDists )\nrownames(sampleDistMatrix) <-paste(sampleCondition[,1],sampleCondition[,2],sampleCondition[,4], sep =\".\") \ncolnames(sampleDistMatrix) <- NULL\ncolors <- colorRampPalette( rev(brewer.pal(9, \"Blues\")) )(255)\npheatmap(sampleDistMatrix,\n         clustering_distance_rows=sampleDists,\n         clustering_distance_cols=sampleDists,\n         col=colors)\n\npoisd <- PoissonDistance(t(counts(dds)))\n\nsamplePoisDistMatrix <- as.matrix( poisd$dd )\nrownames(samplePoisDistMatrix) <- paste(sampleCondition[,1],sampleCondition[,2],sampleCondition[,4], sep =\".\") \ncolnames(samplePoisDistMatrix) <- NULL\npheatmap(samplePoisDistMatrix,\n         clustering_distance_rows=poisd$dd,\n         clustering_distance_cols=poisd$dd,\n         col=colors)\n\nplotPCA(rld, intgroup = c(\"condition.Strain\", \"condition.Time_point\"))\n\npcaData <- plotPCA(rld, intgroup = c( \"condition.Strain\", \"condition.Time_point\"), returnData=TRUE)\npercentVar <- round(100 * attr(pcaData, \"percentVar\"))\n\nggplot(pcaData, aes(PC1, PC2, color=condition.Strain, shape=condition.Time_point)) + geom_point(size=3) +\n  xlab(paste0(\"PC1: \",percentVar[1],\"% variance\")) +\n  ylab(paste0(\"PC2: \",percentVar[2],\"% variance\")) +\n  coord_fixed()\n\nmdsData <- data.frame(cmdscale(sampleDistMatrix))\nmds <- cbind(mdsData, as.data.frame(colData(rld)))\nggplot(mds, aes(X1,X2,color=condition.Strain,shape=condition.Time_point)) + geom_point(size=3) +\n  coord_fixed()\n\nmdsPoisData <- data.frame(cmdscale(samplePoisDistMatrix))\nmdsPois <- cbind(mdsPoisData, as.data.frame(colData(dds)))\nggplot(mdsPois, aes(X1,X2,color=condition.Strain,shape=condition.Time_point)) + geom_point(size=3) +\n  coord_fixed()\n\n```\n\n\n",
    "created" : 1478747308736.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "833429781",
    "id" : "90AD4187",
    "lastKnownWriteTime" : 1479857089,
    "last_content_update" : 1479857089390,
    "path" : "~/ecoli/ecoli.Rmd",
    "project_path" : "ecoli.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}