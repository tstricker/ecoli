b=read.delim("~/Dropbox/hg19.refgene.gff3", header=FALSE, sep="")
require(RColorBrewer)
lp=brewer.pal(9,"Set1")
par(mfrow=c(length(genes),2), mar=c(4,4,1,1), bty="n")
n=which(as.character(b[,10])=="ESR1")
head(b)
n=which(as.character(b[,9])=="ESR1")
n
n=grep("ESR1", as.character(b[,9]))
b
n
ra=range(b[n,4:5])
length=ra[2]-ra[1]
xl=c((min(b[n,4:5])-length*0.25), (max(b[n,4:5])+length*0.25))
chr = b[n[1],1]
index=0
for (q in j) {
index=index+1
n=which(as.character(b[,13])==raw[q,1])
r=range(b[n,4:5])
strand=(b[n[1],7])
plot(r, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,length(j)), xaxt="n", yaxt="n", xlab="", ylab="", lwd = 3)
par(new=TRUE)
for (e in n) {
eb=unlist(b[e,4:5])
plot(eb, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,length(j)), xaxt="n", yaxt="n", xlab="", ylab="", lwd=8)
par(new=TRUE)
}
par(new=TRUE)
}
b[n,]
for (q in 1:4) {
index=index+1
n=which(as.character(b[,13])==raw[q,1])
r=range(b[n,4:5])
strand=(b[n[1],7])
plot(r, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,length(j)), xaxt="n", yaxt="n", xlab="", ylab="", lwd = 3)
par(new=TRUE)
for (e in n) {
eb=unlist(b[e,4:5])
plot(eb, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,length(j)), xaxt="n", yaxt="n", xlab="", ylab="", lwd=8)
par(new=TRUE)
}
par(new=TRUE)
}
for (q in 1:4) {
index=index+1
#n=which(as.character(b[,13])==raw[q,1])
r=range(b[n,4:5])
strand=(b[n[1],7])
plot(r, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,length(j)), xaxt="n", yaxt="n", xlab="", ylab="", lwd = 3)
par(new=TRUE)
for (e in n) {
eb=unlist(b[e,4:5])
plot(eb, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,length(j)), xaxt="n", yaxt="n", xlab="", ylab="", lwd=8)
par(new=TRUE)
}
par(new=TRUE)
}
ra=range(b[n,4:5])
length=ra[2]-ra[1]
xl=c((min(b[n,4:5])-length*0.25), (max(b[n,4:5])+length*0.25))
chr = b[n[1],1]
index=0
for (q in 1:4) {
index=index+1
#n=which(as.character(b[,13])==raw[q,1])
r=range(b[n,4:5])
strand=(b[n[1],7])
plot(r, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,4), xaxt="n", yaxt="n", xlab="", ylab="", lwd = 3)
par(new=TRUE)
for (e in n) {
eb=unlist(b[e,4:5])
plot(eb, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,4), xaxt="n", yaxt="n", xlab="", ylab="", lwd=8)
par(new=TRUE)
}
par(new=TRUE)
}
b[n,]
write.table(b[n,], file = "esr1.test.gff", sep = "\t", quote = F)
b=read.table(file="esr1.test.gff", header= F, as.is = T, quote = "", sep ="\t")
n=which(as.character(b[,9])=="ESR1")
ra=range(b[n,4:5])
length=ra[2]-ra[1]
xl=c((min(b[n,4:5])-length*0.25), (max(b[n,4:5])+length*0.25))
chr = b[n[1],1]
index=0
for (q in 1:4) {
index=index+1
#n=which(as.character(b[,13])==raw[q,1])
r=range(b[n,4:5])
strand=(b[n[1],7])
plot(r, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,4), xaxt="n", yaxt="n", xlab="", ylab="", lwd = 3)
par(new=TRUE)
for (e in n) {
eb=unlist(b[e,4:5])
plot(eb, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,4), xaxt="n", yaxt="n", xlab="", ylab="", lwd=8)
par(new=TRUE)
}
par(new=TRUE)
}
n=which(as.character(b[,9])=="ESR1")
ra=range(b[n,4:5])
length=ra[2]-ra[1]
xl=c((min(b[n,4:5])-length*0.25), (max(b[n,4:5])+length*0.25))
chr = b[n[1],1]
b
str(b)
b=data.matrix(b)
n=which(as.character(b[,9])=="ESR1")
ra=range(b[n,4:5])
length=ra[2]-ra[1]
xl=c((min(b[n,4:5])-length*0.25), (max(b[n,4:5])+length*0.25))
chr = b[n[1],1]
b
b=read.table(file="esr1.test.gff", header= F, as.is = T, quote = "", sep ="\t")
ra=range(b[n,4:5])
str(b)
ra=range(b[n,5:6])
length=ra[2]-ra[1]
ra=range(b[,5:6])
length=ra[2]-ra[1]
xl=c((min(b[,5:6])-length*0.25), (max(b[,5:6])+length*0.25))
chr = b[,1]
chr = b[1,1]
index=0
index=index+1
#n=which(as.character(b[,13])==raw[q,1])
r=range(b[n,4:5])
strand=(b[n[1],7])
plot(r, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,4), xaxt="n", yaxt="n", xlab="", ylab="", lwd = 3)
par(new=TRUE)
for (e in n) {
eb=unlist(b[e,4:5])
plot(eb, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,4), xaxt="n", yaxt="n", xlab="", ylab="", lwd=8)
par(new=TRUE)
}
par(new=TRUE)
index=index+1
#n=which(as.character(b[,13])==raw[q,1])
r=range(b[n,5:6])
strand=(b[1,7])
r=range(b[,5:6])
strand=(b[1,7])
plot(r, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,4), xaxt="n", yaxt="n", xlab="", ylab="", lwd = 3)
par(new=TRUE)
for (e in n) {
eb=unlist(b[e,4:5])
plot(eb, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,4), xaxt="n", yaxt="n", xlab="", ylab="", lwd=8)
par(new=TRUE)
}
par(new=TRUE)
plot(r, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,4), xaxt="n", yaxt="n", xlab="", ylab="", lwd = 3)
par(new=TRUE)
for (e in n) {
eb=unlist(b[e,4:5])
plot(eb, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,4), xaxt="n", yaxt="n", xlab="", ylab="", lwd=8)
par(new=TRUE)
}
par(new=TRUE)
for (e in n) {
eb=unlist(b[e,5:6])
plot(eb, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,4), xaxt="n", yaxt="n", xlab="", ylab="", lwd=8)
par(new=TRUE)
}
par(new=TRUE)
e
n
dim(b)
for (e in 1:30) {
eb=unlist(b[e,5:6])
plot(eb, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,1), xaxt="n", yaxt="n", xlab="", ylab="", lwd=8)
par(new=TRUE)
}
par(new=TRUE)
e=1
eb=unlist(b[e,5:6])
eb
plot(eb, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,1), xaxt="n", yaxt="n", xlab="", ylab="", lwd=8)
par(new=TRUE)
index
lp[index]
eb
plot(eb)
plot(eb, c(index, index))
plot(eb, c(index, index), type="l")
plot(eb, c(index, index), type="l", col=lp[index])
plot(eb, c(index, index), type="l", col=lp[index], xlim=xl)
xl
plot(eb, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,1), xaxt="n", yaxt="n", xlab="", ylab="", lwd=8)
plot(eb, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,1), xaxt="n", yaxt="n", xlab="", ylab="", lwd=20)
plot(eb, c(index, index), type="l", col=lp[index], ylim=c(0,1), xaxt="n", yaxt="n", xlab="", ylab="", lwd=20)
plot(eb, c(index, index), type="l", col=lp[index], ylim=c(0,1))
plot(eb, c(index, index), type="l", col=lp[index])
plot(eb, c(index, index), type="l", col=lp[index],xlim=xl , xaxt="n", yaxt="n", xlab="", ylab="", lwd=20)
r=range(b[,5:6])
strand=(b[1,7])
plot(r, c(index, index), type="l", col=lp[index], xlim=xl, ylim=c(0,1), xaxt="n", yaxt="n", xlab="", ylab="", lwd = 3)
par(new=TRUE)
for (e in 1:30) {
eb=unlist(b[e,5:6])
plot(eb, c(index, index), type="l", col=lp[index],xlim=xl , xaxt="n", yaxt="n", xlab="", ylab="", lwd=20)
par(new=TRUE)
}
plot(r, c(index, index), type="l", col=lp[index], xlim=xl, xaxt="n", yaxt="n", xlab="", ylab="", lwd = 3)
par(new=TRUE)
for (e in 1:30) {
eb=unlist(b[e,5:6])
plot(eb, c(index, index), type="l", col=lp[index],xlim=xl , xaxt="n", yaxt="n", xlab="", ylab="", lwd=20)
par(new=TRUE)
}
r=range(b[,5:6])
strand=(b[1,7])
plot(r, c(index, index), type="l", col=lp[index], xlim=xl, xaxt="n", yaxt="n", xlab="", ylab="", lwd = 3)
par(new=TRUE)
for (e in 1:30) {
eb=unlist(b[e,5:6])
plot(eb, c(index, index), type="l", col=lp[index],xlim=xl , xaxt="n", yaxt="n", xlab="", ylab="", lwd=20)
par(new=TRUE)
}
par(new=TRUE)
data_directory = system.file('extdata', package='ballgown')
data_directory
data_directory = system.file('extdata/BRE_tablemaker/', package='ballgown')
data_directory
bg = ballgown(dataDir=data_directory, samplePattern='BRE*', meas='all')
bg
pData(bg) = data.frame(id=sampleNames(bg)), group=rep())
transcript_gene_table = indexes(bg)$t2g
head(transcript_gene_table)
library(ballgown)
bg = ballgown(dataDir=data_directory, samplePattern='BRE*', meas='all')
bg
pData(bg) = data.frame(id=sampleNames(bg)), group=rep())
transcript_gene_table = indexes(bg)$t2g
head(transcript_gene_table)
bg = ballgown(dataDir=data_directory, samplePattern='BRE*', meas='all')
bg
samples.table = read.delim(file = "~/Dropbox/arteaga_BRE/cuffnorm/samples.table", header = T, as.is = T, sep = "\t", quote = "")
which(samples.table$internal_scale < 0.5)
temp=
which(samples.table$internal_scale < 0.5)
temp
samples.table[temp,]
bg = ballgown(dataDir=data_directory, samplePattern='BRE*', meas='all')
bg
bg = ballgown(dataDir=data_directory, samplePattern='BRE*', meas='all')
bg
975 *2
1950/2175
2175/1950
1500*1.11
1500*1.12
1950-180
1950-1680
2173-1680
925*2
2175/1850
1500*1.18
2175-1770
950*3
950*2
750*2*1.18
914*2
150000+100000+100000+20000
650000-370000
require(qvalue)
citation("qvalue")
source("https://bioconductor.org/biocLite.R")
biocLite("Mfuzz")
require(Mfuzz)
capabilities("tcltk")
system("ls -ld /usr/local /usr/local/lib /usr/local/lib/libtcl*")
sudo chmod -R a+rX /usr/local
require(Mfuzz)
require(Mfuzz)
require(Mfuzz)
require(Mfuzz)
require(Mfuzz)
require(Mfuzz)
require(Mfuzz)
require(Mfuzz)
require(Mfuzz)
require(Mfuzz)
require(Mfuzz)
require(Mfuzz)
capabilities("tcltk")
system("ls -ld /usr/local /usr/local/lib /usr/local/lib/libtcl*")
system("locate libXft.2.dylib")
sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist
system("locate libXft.2.dylib")
require(Mfuzz)
setwd("~/ecoli/cuffnorm_biorep2/")
require(limma)
setwd("~/ecoli/cuffnorm_biorep2/")
genes = read.delim(file = "genes.attr_table", header = T, as.is = T, sep = "\t", quote = "")
gene.exp= read.table(file ="genes.fpkm_table", header = T, as.is = T, sep = "\t", quote = "")
final.gene =read.table(file ="mfuzz.gene.list.txt", header = T, as.is = T, sep = "\t", quote = "")
gene.exp1 = gene.exp[,-1]
colnames(gene.exp1)=NULL
rownames(gene.exp1)=NULL
gene.exp1=data.matrix(gene.exp1)
final = rbind(gene.exp1[,1:3], gene.exp1[,4:6],gene.exp1[,7:9],gene.exp1[,10:12],gene.exp1[,13:15],gene.exp1[,16:18],gene.exp1[,19:21])
rownames(final) = final.gene[,1]
m=apply(final, 1, mean)
m1=(log2(m+1))
hist(m1, breaks = 300)
high=which(m1>2)
gene.exp3 = final[high,]
gene.exp3 = data.matrix(gene.exp3)
gene.exp4=(log2(gene.exp3+1))
minimalSet <- ExpressionSet(assayData=gene.exp4)
gene.exp5 <- standardise(minimalSet)
m1 <- mestimate(gene.exp5)
cl <- mfuzz(gene.exp5,c=8,m=4)
mfuzz.plot(gene.exp5,cl=cl,mfrow=c(2,4))
